	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:11,569 [main] org.apache.kafka.common.security.oauthbearer.internals.secured.RefreshingHttpsJwks init - JWKS validation key refresh thread started with a refresh interval of 3600000 ms
[INFO] 2024-10-08 10:46:11,582 [main] org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredLoginCallbackHandler handleTokenCallback - Retrieved token with principal thePrincipalName
	confluent.oauth.groups.claim.name = 
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:11,893 [main] org.apache.kafka.clients.producer.ProducerConfig logUnused - These configurations '[server.public.key.path, listener.name.replication.ssl.keystore.password, auto.create.topics.enable, listener.name.replication.sasl.enabled.mechanisms, min.insync.replicas, kafka.rest.client.security.protocol, listener.name.internal.ssl.truststore.password, confluent.metrics.reporter.security.protocol, num.recovery.threads.per.data.dir, listener.name.internal.ssl.keystore.password, server.oauthbearer.jwks.endpoint.url, super.users, listener.name.controller.ssl.keystore.password, config.providers.file.class, listener.name.token.oauthbearer.sasl.server.callback.handler.class, sasl.mechanism.inter.broker.protocol, default.replication.factor, broker.session.uuid, kafka.rest.client.ssl.truststore.password, listener.name.replication.ssl.truststore.location, enable.server.urls.refresh, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.operator.managed, transaction.state.log.replication.factor, num.io.threads, confluent.tier.metadata.replication.factor, kafka.rest.oauthbearer.sub.claim.name, listener.name.controller.sasl.mechanism, listener.name.replication.ssl.key.password, delete.topic.enable, confluent.metrics.reporter.ssl.truststore.location, listener.name.controller.ssl.truststore.password, confluent.license.topic.replication.factor, listener.name.token.oauthbearer.sasl.jaas.config, offsets.commit.timeout.ms, authorizer.class.name, sasl.mechanism.controller.protocol, server.advertised.listeners, listener.name.token.ssl.keystore.password, confluent.balancer.topic.replication.factor, server.ssl.keystore.password, kafka.rest.confluent.metadata.enable.server.urls.refresh, listener.name.controller.plain.sasl.jaas.config, server.token.max.lifetime.ms, confluent.metrics.reporter.ssl.truststore.password, offsets.topic.replication.factor, transaction.state.log.min.isr, listener.name.internal.sasl.mechanism, socket.request.max.bytes, server.token.key.path, listener.name.token.sasl.mechanism, offsets.retention.minutes, inter.broker.protocol.version, kafka.rest.confluent.metadata.ssl.truststore.password, listener.security.protocol.map, log.retention.hours, kafka.rest.kafka.rest.resource.extension.class, num.partitions, listener.name.token.ssl.truststore.password, listeners, inter.broker.listener.name, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, listener.name.internal.ssl.key.password, listener.name.token.sasl.enabled.mechanisms, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, listener.name.internal.ssl.keystore.location, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.balancer.enable, node.id, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, listener.name.token.sasl.oauthbearer.sub.claim.name, server.ssl.endpoint.identification.algorithm, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, server.ssl.key.password, config.providers, listener.name.internal.plain.sasl.jaas.config, kafka.rest.oauthbearer.jwks.endpoint.url, listener.name.controller.ssl.truststore.location, listener.name.token.sasl.oauthbearer.jwks.endpoint.url, kafka.rest.confluent.metadata.bootstrap.server.urls, kafka.rest.enable, confluent.topic.replication.factor, listener.name.controller.sasl.enabled.mechanisms, server.ssl.keystore.reload, listener.name.token.ssl.keystore.location, server.ssl.truststore.password, log.message.format.version, listener.name.controller.ssl.keystore.location, listener.name.replication.plain.sasl.jaas.config, kafka.rest.rest.servlet.initializor.classes, server.ssl.keystore.location, listener.name.token.ssl.key.password, log.segment.bytes, listener.name.token.ssl.truststore.location, group.max.session.timeout.ms, controller.listener.names, listener.name.token.principal.builder.class, server.token.auth.enable, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, log.dirs, listener.name.internal.sasl.enabled.mechanisms, kafka.rest.client.ssl.truststore.location, listener.name.replication.ssl.truststore.password, kafka.rest.confluent.metadata.oauthbearer.login.client.id, server.token.signature.algorithm, server.authentication.method, kafka.rest.bootstrap.servers, confluent.metrics.reporter.topic.replicas, listener.name.token.sasl.oauthbearer.expected.issuer, replica.lag.time.max.ms, listener.name.replication.ssl.keystore.location, listener.name.internal.ssl.truststore.location, server.ssl.truststore.location, num.network.threads, socket.send.buffer.bytes, listener.name.replication.sasl.mechanism, socket.receive.buffer.bytes, server.listeners, broker.rack, sasl.enabled.mechanisms, server.user.store, server.oauthbearer.sub.claim.name, controller.quorum.voters, process.roles, broker.id, offsets.topic.compression.codec, server.oauthbearer.expected.issuer, log.retention.check.interval.ms, advertised.listeners, listener.name.controller.ssl.key.password]' were supplied but are not used yet.
[INFO] 2024-10-08 10:46:11,896 [pool-7-thread-1] org.apache.kafka.clients.consumer.ConsumerConfig logUnused - These configurations '[server.public.key.path, listener.name.replication.ssl.keystore.password, auto.create.topics.enable, listener.name.replication.sasl.enabled.mechanisms, min.insync.replicas, kafka.rest.client.security.protocol, listener.name.internal.ssl.truststore.password, confluent.metrics.reporter.security.protocol, num.recovery.threads.per.data.dir, listener.name.internal.ssl.keystore.password, server.oauthbearer.jwks.endpoint.url, super.users, listener.name.controller.ssl.keystore.password, config.providers.file.class, listener.name.token.oauthbearer.sasl.server.callback.handler.class, sasl.mechanism.inter.broker.protocol, default.replication.factor, broker.session.uuid, kafka.rest.client.ssl.truststore.password, listener.name.replication.ssl.truststore.location, enable.server.urls.refresh, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.operator.managed, transaction.state.log.replication.factor, num.io.threads, confluent.tier.metadata.replication.factor, kafka.rest.oauthbearer.sub.claim.name, listener.name.controller.sasl.mechanism, listener.name.replication.ssl.key.password, delete.topic.enable, confluent.metrics.reporter.ssl.truststore.location, listener.name.controller.ssl.truststore.password, confluent.license.topic.replication.factor, listener.name.token.oauthbearer.sasl.jaas.config, offsets.commit.timeout.ms, authorizer.class.name, sasl.mechanism.controller.protocol, server.advertised.listeners, listener.name.token.ssl.keystore.password, confluent.balancer.topic.replication.factor, server.ssl.keystore.password, kafka.rest.confluent.metadata.enable.server.urls.refresh, listener.name.controller.plain.sasl.jaas.config, server.token.max.lifetime.ms, confluent.metrics.reporter.ssl.truststore.password, offsets.topic.replication.factor, transaction.state.log.min.isr, listener.name.internal.sasl.mechanism, socket.request.max.bytes, server.token.key.path, listener.name.token.sasl.mechanism, offsets.retention.minutes, inter.broker.protocol.version, kafka.rest.confluent.metadata.ssl.truststore.password, listener.security.protocol.map, log.retention.hours, kafka.rest.kafka.rest.resource.extension.class, num.partitions, listener.name.token.ssl.truststore.password, listeners, inter.broker.listener.name, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, listener.name.internal.ssl.key.password, listener.name.token.sasl.enabled.mechanisms, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, listener.name.internal.ssl.keystore.location, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.balancer.enable, node.id, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, listener.name.token.sasl.oauthbearer.sub.claim.name, server.ssl.endpoint.identification.algorithm, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, server.ssl.key.password, config.providers, listener.name.internal.plain.sasl.jaas.config, kafka.rest.oauthbearer.jwks.endpoint.url, listener.name.controller.ssl.truststore.location, listener.name.token.sasl.oauthbearer.jwks.endpoint.url, kafka.rest.confluent.metadata.bootstrap.server.urls, kafka.rest.enable, confluent.topic.replication.factor, listener.name.controller.sasl.enabled.mechanisms, server.ssl.keystore.reload, listener.name.token.ssl.keystore.location, server.ssl.truststore.password, log.message.format.version, listener.name.controller.ssl.keystore.location, listener.name.replication.plain.sasl.jaas.config, kafka.rest.rest.servlet.initializor.classes, server.ssl.keystore.location, listener.name.token.ssl.key.password, log.segment.bytes, listener.name.token.ssl.truststore.location, group.max.session.timeout.ms, controller.listener.names, listener.name.token.principal.builder.class, server.token.auth.enable, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, log.dirs, listener.name.internal.sasl.enabled.mechanisms, kafka.rest.client.ssl.truststore.location, listener.name.replication.ssl.truststore.password, kafka.rest.confluent.metadata.oauthbearer.login.client.id, server.token.signature.algorithm, server.authentication.method, kafka.rest.bootstrap.servers, confluent.metrics.reporter.topic.replicas, listener.name.token.sasl.oauthbearer.expected.issuer, replica.lag.time.max.ms, listener.name.replication.ssl.keystore.location, listener.name.internal.ssl.truststore.location, server.ssl.truststore.location, num.network.threads, socket.send.buffer.bytes, listener.name.replication.sasl.mechanism, socket.receive.buffer.bytes, server.listeners, broker.rack, sasl.enabled.mechanisms, server.user.store, server.oauthbearer.sub.claim.name, controller.quorum.voters, process.roles, broker.id, offsets.topic.compression.codec, server.oauthbearer.expected.issuer, log.retention.check.interval.ms, advertised.listeners, listener.name.controller.ssl.key.password]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:26,252 [kafka-0-metadata-loader-event-handler] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[kafka.rest.client.sasl.oauthbearer.token.endpoint.url, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, kafka.rest.confluent.metadata.enable.server.urls.refresh, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:30,539 [auth-writer-mgmt-1] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[server.public.key.path, listener.name.replication.ssl.keystore.password, auto.create.topics.enable, listener.name.replication.sasl.enabled.mechanisms, min.insync.replicas, kafka.rest.client.security.protocol, listener.name.internal.ssl.truststore.password, confluent.metrics.reporter.security.protocol, num.recovery.threads.per.data.dir, listener.name.internal.ssl.keystore.password, server.oauthbearer.jwks.endpoint.url, super.users, listener.name.controller.ssl.keystore.password, config.providers.file.class, listener.name.token.oauthbearer.sasl.server.callback.handler.class, sasl.mechanism.inter.broker.protocol, default.replication.factor, broker.session.uuid, kafka.rest.client.ssl.truststore.password, listener.name.replication.ssl.truststore.location, enable.server.urls.refresh, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.operator.managed, transaction.state.log.replication.factor, num.io.threads, confluent.tier.metadata.replication.factor, kafka.rest.oauthbearer.sub.claim.name, listener.name.controller.sasl.mechanism, listener.name.replication.ssl.key.password, delete.topic.enable, confluent.metrics.reporter.ssl.truststore.location, listener.name.controller.ssl.truststore.password, confluent.license.topic.replication.factor, listener.name.token.oauthbearer.sasl.jaas.config, offsets.commit.timeout.ms, authorizer.class.name, sasl.mechanism.controller.protocol, server.advertised.listeners, listener.name.token.ssl.keystore.password, confluent.balancer.topic.replication.factor, server.ssl.keystore.password, kafka.rest.confluent.metadata.enable.server.urls.refresh, listener.name.controller.plain.sasl.jaas.config, server.token.max.lifetime.ms, confluent.metrics.reporter.ssl.truststore.password, offsets.topic.replication.factor, transaction.state.log.min.isr, listener.name.internal.sasl.mechanism, socket.request.max.bytes, server.token.key.path, listener.name.token.sasl.mechanism, offsets.retention.minutes, inter.broker.protocol.version, kafka.rest.confluent.metadata.ssl.truststore.password, listener.security.protocol.map, log.retention.hours, kafka.rest.kafka.rest.resource.extension.class, num.partitions, listener.name.token.ssl.truststore.password, listeners, inter.broker.listener.name, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, listener.name.internal.ssl.key.password, listener.name.token.sasl.enabled.mechanisms, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, listener.name.internal.ssl.keystore.location, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.balancer.enable, node.id, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, listener.name.token.sasl.oauthbearer.sub.claim.name, server.ssl.endpoint.identification.algorithm, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, server.ssl.key.password, config.providers, listener.name.internal.plain.sasl.jaas.config, kafka.rest.oauthbearer.jwks.endpoint.url, listener.name.controller.ssl.truststore.location, listener.name.token.sasl.oauthbearer.jwks.endpoint.url, kafka.rest.confluent.metadata.bootstrap.server.urls, kafka.rest.enable, confluent.topic.replication.factor, listener.name.controller.sasl.enabled.mechanisms, server.ssl.keystore.reload, listener.name.token.ssl.keystore.location, server.ssl.truststore.password, log.message.format.version, listener.name.controller.ssl.keystore.location, listener.name.replication.plain.sasl.jaas.config, kafka.rest.rest.servlet.initializor.classes, server.ssl.keystore.location, listener.name.token.ssl.key.password, log.segment.bytes, listener.name.token.ssl.truststore.location, group.max.session.timeout.ms, controller.listener.names, listener.name.token.principal.builder.class, server.token.auth.enable, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, log.dirs, listener.name.internal.sasl.enabled.mechanisms, kafka.rest.client.ssl.truststore.location, listener.name.replication.ssl.truststore.password, kafka.rest.confluent.metadata.oauthbearer.login.client.id, server.token.signature.algorithm, server.authentication.method, kafka.rest.bootstrap.servers, confluent.metrics.reporter.topic.replicas, listener.name.token.sasl.oauthbearer.expected.issuer, replica.lag.time.max.ms, listener.name.replication.ssl.keystore.location, listener.name.internal.ssl.truststore.location, server.ssl.truststore.location, num.network.threads, socket.send.buffer.bytes, listener.name.replication.sasl.mechanism, socket.receive.buffer.bytes, server.listeners, broker.rack, sasl.enabled.mechanisms, server.user.store, server.oauthbearer.sub.claim.name, controller.quorum.voters, process.roles, broker.id, offsets.topic.compression.codec, server.oauthbearer.expected.issuer, log.retention.check.interval.ms, advertised.listeners, listener.name.controller.ssl.key.password]' were supplied but are not used yet.
[INFO] 2024-10-08 10:46:30,539 [metadata-service-coordinator] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[server.public.key.path, listener.name.replication.ssl.keystore.password, auto.create.topics.enable, listener.name.replication.sasl.enabled.mechanisms, min.insync.replicas, kafka.rest.client.security.protocol, listener.name.internal.ssl.truststore.password, confluent.metrics.reporter.security.protocol, num.recovery.threads.per.data.dir, listener.name.internal.ssl.keystore.password, server.oauthbearer.jwks.endpoint.url, super.users, listener.name.controller.ssl.keystore.password, config.providers.file.class, listener.name.token.oauthbearer.sasl.server.callback.handler.class, sasl.mechanism.inter.broker.protocol, default.replication.factor, broker.session.uuid, kafka.rest.client.ssl.truststore.password, listener.name.replication.ssl.truststore.location, enable.server.urls.refresh, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.operator.managed, transaction.state.log.replication.factor, num.io.threads, confluent.tier.metadata.replication.factor, kafka.rest.oauthbearer.sub.claim.name, listener.name.controller.sasl.mechanism, listener.name.replication.ssl.key.password, delete.topic.enable, confluent.metrics.reporter.ssl.truststore.location, listener.name.controller.ssl.truststore.password, confluent.license.topic.replication.factor, listener.name.token.oauthbearer.sasl.jaas.config, offsets.commit.timeout.ms, authorizer.class.name, sasl.mechanism.controller.protocol, server.advertised.listeners, listener.name.token.ssl.keystore.password, confluent.balancer.topic.replication.factor, server.ssl.keystore.password, kafka.rest.confluent.metadata.enable.server.urls.refresh, listener.name.controller.plain.sasl.jaas.config, server.token.max.lifetime.ms, confluent.metrics.reporter.ssl.truststore.password, offsets.topic.replication.factor, transaction.state.log.min.isr, listener.name.internal.sasl.mechanism, socket.request.max.bytes, server.token.key.path, listener.name.token.sasl.mechanism, offsets.retention.minutes, inter.broker.protocol.version, kafka.rest.confluent.metadata.ssl.truststore.password, listener.security.protocol.map, log.retention.hours, kafka.rest.kafka.rest.resource.extension.class, num.partitions, listener.name.token.ssl.truststore.password, listeners, inter.broker.listener.name, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, listener.name.internal.ssl.key.password, listener.name.token.sasl.enabled.mechanisms, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, listener.name.internal.ssl.keystore.location, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.balancer.enable, node.id, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, listener.name.token.sasl.oauthbearer.sub.claim.name, server.ssl.endpoint.identification.algorithm, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, server.ssl.key.password, config.providers, listener.name.internal.plain.sasl.jaas.config, kafka.rest.oauthbearer.jwks.endpoint.url, listener.name.controller.ssl.truststore.location, listener.name.token.sasl.oauthbearer.jwks.endpoint.url, kafka.rest.confluent.metadata.bootstrap.server.urls, kafka.rest.enable, confluent.topic.replication.factor, listener.name.controller.sasl.enabled.mechanisms, server.ssl.keystore.reload, listener.name.token.ssl.keystore.location, server.ssl.truststore.password, log.message.format.version, listener.name.controller.ssl.keystore.location, listener.name.replication.plain.sasl.jaas.config, kafka.rest.rest.servlet.initializor.classes, server.ssl.keystore.location, listener.name.token.ssl.key.password, log.segment.bytes, listener.name.token.ssl.truststore.location, group.max.session.timeout.ms, controller.listener.names, listener.name.token.principal.builder.class, server.token.auth.enable, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, log.dirs, listener.name.internal.sasl.enabled.mechanisms, kafka.rest.client.ssl.truststore.location, listener.name.replication.ssl.truststore.password, kafka.rest.confluent.metadata.oauthbearer.login.client.id, server.token.signature.algorithm, server.authentication.method, kafka.rest.bootstrap.servers, confluent.metrics.reporter.topic.replicas, listener.name.token.sasl.oauthbearer.expected.issuer, replica.lag.time.max.ms, listener.name.replication.ssl.keystore.location, listener.name.internal.ssl.truststore.location, server.ssl.truststore.location, num.network.threads, socket.send.buffer.bytes, listener.name.replication.sasl.mechanism, socket.receive.buffer.bytes, server.listeners, broker.rack, sasl.enabled.mechanisms, server.user.store, server.oauthbearer.sub.claim.name, controller.quorum.voters, process.roles, broker.id, offsets.topic.compression.codec, server.oauthbearer.expected.issuer, log.retention.check.interval.ms, advertised.listeners, listener.name.controller.ssl.key.password]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:30,544 [metadata-service-coordinator] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[server.public.key.path, listener.name.replication.ssl.keystore.password, auto.create.topics.enable, listener.name.replication.sasl.enabled.mechanisms, min.insync.replicas, kafka.rest.client.security.protocol, listener.name.internal.ssl.truststore.password, confluent.metrics.reporter.security.protocol, num.recovery.threads.per.data.dir, listener.name.internal.ssl.keystore.password, server.oauthbearer.jwks.endpoint.url, super.users, listener.name.controller.ssl.keystore.password, config.providers.file.class, listener.name.token.oauthbearer.sasl.server.callback.handler.class, sasl.mechanism.inter.broker.protocol, default.replication.factor, broker.session.uuid, kafka.rest.client.ssl.truststore.password, listener.name.replication.ssl.truststore.location, enable.server.urls.refresh, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.operator.managed, transaction.state.log.replication.factor, num.io.threads, confluent.tier.metadata.replication.factor, kafka.rest.oauthbearer.sub.claim.name, listener.name.controller.sasl.mechanism, listener.name.replication.ssl.key.password, delete.topic.enable, confluent.metrics.reporter.ssl.truststore.location, listener.name.controller.ssl.truststore.password, confluent.license.topic.replication.factor, listener.name.token.oauthbearer.sasl.jaas.config, offsets.commit.timeout.ms, authorizer.class.name, sasl.mechanism.controller.protocol, server.advertised.listeners, listener.name.token.ssl.keystore.password, confluent.balancer.topic.replication.factor, server.ssl.keystore.password, kafka.rest.confluent.metadata.enable.server.urls.refresh, listener.name.controller.plain.sasl.jaas.config, server.token.max.lifetime.ms, confluent.metrics.reporter.ssl.truststore.password, offsets.topic.replication.factor, transaction.state.log.min.isr, listener.name.internal.sasl.mechanism, socket.request.max.bytes, server.token.key.path, listener.name.token.sasl.mechanism, offsets.retention.minutes, inter.broker.protocol.version, kafka.rest.confluent.metadata.ssl.truststore.password, listener.security.protocol.map, log.retention.hours, kafka.rest.kafka.rest.resource.extension.class, num.partitions, listener.name.token.ssl.truststore.password, listeners, inter.broker.listener.name, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, listener.name.internal.ssl.key.password, listener.name.token.sasl.enabled.mechanisms, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, listener.name.internal.ssl.keystore.location, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.balancer.enable, node.id, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, listener.name.token.sasl.oauthbearer.sub.claim.name, server.ssl.endpoint.identification.algorithm, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, server.ssl.key.password, config.providers, listener.name.internal.plain.sasl.jaas.config, kafka.rest.oauthbearer.jwks.endpoint.url, listener.name.controller.ssl.truststore.location, listener.name.token.sasl.oauthbearer.jwks.endpoint.url, kafka.rest.confluent.metadata.bootstrap.server.urls, kafka.rest.enable, confluent.topic.replication.factor, listener.name.controller.sasl.enabled.mechanisms, server.ssl.keystore.reload, listener.name.token.ssl.keystore.location, server.ssl.truststore.password, log.message.format.version, listener.name.controller.ssl.keystore.location, listener.name.replication.plain.sasl.jaas.config, kafka.rest.rest.servlet.initializor.classes, server.ssl.keystore.location, listener.name.token.ssl.key.password, log.segment.bytes, listener.name.token.ssl.truststore.location, group.max.session.timeout.ms, controller.listener.names, listener.name.token.principal.builder.class, server.token.auth.enable, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, log.dirs, listener.name.internal.sasl.enabled.mechanisms, kafka.rest.client.ssl.truststore.location, listener.name.replication.ssl.truststore.password, kafka.rest.confluent.metadata.oauthbearer.login.client.id, server.token.signature.algorithm, server.authentication.method, kafka.rest.bootstrap.servers, confluent.metrics.reporter.topic.replicas, listener.name.token.sasl.oauthbearer.expected.issuer, replica.lag.time.max.ms, listener.name.replication.ssl.keystore.location, listener.name.internal.ssl.truststore.location, server.ssl.truststore.location, num.network.threads, socket.send.buffer.bytes, listener.name.replication.sasl.mechanism, socket.receive.buffer.bytes, server.listeners, broker.rack, sasl.enabled.mechanisms, server.user.store, server.oauthbearer.sub.claim.name, controller.quorum.voters, process.roles, broker.id, offsets.topic.compression.codec, server.oauthbearer.expected.issuer, log.retention.check.interval.ms, advertised.listeners, listener.name.controller.ssl.key.password]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	oauthbearer.expected.audience = null
	oauthbearer.expected.issuer = http://keycloak:8080/realms/sso_test
	oauthbearer.groups.claim.name = null
	oauthbearer.jti.validation.enabled = false
	oauthbearer.jwks.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
	oauthbearer.sub.claim.name = client_id
	user.store = OAUTH
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	oauthbearer.expected.audience = null
	oauthbearer.expected.issuer = http://keycloak:8080/realms/sso_test
	oauthbearer.groups.claim.name = null
	oauthbearer.jti.validation.enabled = false
	oauthbearer.jwks.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
	oauthbearer.sub.claim.name = client_id
	user.store = OAUTH
	oauthbearer.expected.audience = null
	oauthbearer.expected.issuer = http://keycloak:8080/realms/sso_test
	oauthbearer.groups.claim.name = null
	oauthbearer.jti.validation.enabled = false
	oauthbearer.jwks.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
	oauthbearer.sub.claim.name = client_id
	user.store = OAUTH
	oauthbearer.expected.audience = null
	oauthbearer.expected.issuer = http://keycloak:8080/realms/sso_test
	oauthbearer.groups.claim.name = null
	oauthbearer.jti.validation.enabled = false
	oauthbearer.jwks.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
	oauthbearer.sub.claim.name = client_id
	user.store = OAUTH
[INFO] 2024-10-08 10:46:32,012 [ce-kafka-http-server-start-thread] io.confluent.rbacapi.app.RbacApiApplication createIdpLoginService - Setting up custom SSLContext for OAuth JWT authenticator.
	client.sasl.mechanism = OAUTHBEARER
	oauthbearer.expected.audience = null
	oauthbearer.expected.issuer = http://keycloak:8080/realms/sso_test
	oauthbearer.groups.claim.name = null
	oauthbearer.jti.validation.enabled = false
	oauthbearer.jwks.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
	oauthbearer.sub.claim.name = client_id
[DEBUG] 2024-10-08 10:46:32,127 [ce-kafka-http-server-start-thread] io.confluent.common.security.jetty.initializer.AuthenticationHandler getOAuthSecurityHandler - Configured Jetty authentication roles: **
[DEBUG] 2024-10-08 10:46:32,131 [ce-kafka-http-server-start-thread] io.confluent.common.security.jetty.initializer.AuthenticationHandler isConfluentOAuthEnabled - Configured public key path for token validation: /mnt/secrets/mds-token/mdsPublicKey.pem
[DEBUG] 2024-10-08 10:46:32,131 [ce-kafka-http-server-start-thread] io.confluent.common.security.jetty.initializer.AuthenticationHandler isIdpOAuthEnabled - Configured IDP issuer: http://keycloak:8080/realms/sso_test, IDP key url: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
[DEBUG] 2024-10-08 10:46:32,131 [ce-kafka-http-server-start-thread] io.confluent.common.security.jetty.initializer.AuthenticationHandler createHttpLoginService - Confluent OAuth enabled: true, IDP Oauth is enabled: true
[INFO] 2024-10-08 10:46:32,135 [ce-kafka-http-server-start-thread] io.confluent.common.security.util.JwtUtils getJwtKeyResolver - Setting up custom SSLContext for OAuth JWT authenticator.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	confluent.metadata.http.auth.credentials.provider = OAUTHBEARER
	confluent.metadata.oauthbearer.login.client.id = ssologin
	confluent.metadata.oauthbearer.login.client.secret = [hidden]
	confluent.metadata.oauthbearer.login.connect.timeout.ms = null
	confluent.metadata.oauthbearer.login.oauth.scope = null
	confluent.metadata.oauthbearer.login.read.timeout.ms = null
	confluent.metadata.oauthbearer.login.retry.backoff.max.ms = 10000
	confluent.metadata.oauthbearer.login.retry.backoff.ms = 100
	confluent.metadata.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
[INFO] 2024-10-08 10:46:32,143 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	confluent.metadata.http.auth.credentials.provider = OAUTHBEARER
	confluent.metadata.oauthbearer.login.client.id = ssologin
	confluent.metadata.oauthbearer.login.client.secret = [hidden]
	confluent.metadata.oauthbearer.login.connect.timeout.ms = null
	confluent.metadata.oauthbearer.login.oauth.scope = null
	confluent.metadata.oauthbearer.login.read.timeout.ms = null
	confluent.metadata.oauthbearer.login.retry.backoff.max.ms = 10000
	confluent.metadata.oauthbearer.login.retry.backoff.ms = 100
	confluent.metadata.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	confluent.metadata.http.auth.credentials.provider = OAUTHBEARER
	confluent.metadata.oauthbearer.login.client.id = ssologin
	confluent.metadata.oauthbearer.login.client.secret = [hidden]
	confluent.metadata.oauthbearer.login.connect.timeout.ms = null
	confluent.metadata.oauthbearer.login.oauth.scope = null
	confluent.metadata.oauthbearer.login.read.timeout.ms = null
	confluent.metadata.oauthbearer.login.retry.backoff.max.ms = 10000
	confluent.metadata.oauthbearer.login.retry.backoff.ms = 100
	confluent.metadata.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:32,217 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:32,266 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.consumer.ConsumerConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, auto.register.schemas, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, schema.registry.url, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, use.latest.version, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:32,297 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.producer.ProducerConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:32,304 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.consumer.ConsumerConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, auto.register.schemas, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, schema.registry.url, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, use.latest.version, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:32,865 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:32,906 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:33,306 [main] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[kafka.rest.client.sasl.oauthbearer.token.endpoint.url, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, confluent.metadata.server.listeners, config.providers, min.insync.replicas, kafka.rest.client.security.protocol, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.metadata.server.ssl.keystore.reload, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:33,368 [confluent-license-manager] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[kafka.rest.client.sasl.oauthbearer.token.endpoint.url, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, confluent.metadata.server.listeners, config.providers, min.insync.replicas, kafka.rest.client.security.protocol, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.metadata.server.ssl.keystore.reload, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:33,400 [confluent-license-manager] org.apache.kafka.clients.consumer.ConsumerConfig logUnused - These configurations '[kafka.rest.client.sasl.oauthbearer.token.endpoint.url, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.metadata.server.ssl.keystore.reload, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, kafka.rest.confluent.metadata.enable.server.urls.refresh, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:33,416 [confluent-license-manager] org.apache.kafka.clients.producer.ProducerConfig logUnused - These configurations '[kafka.rest.client.sasl.oauthbearer.token.endpoint.url, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.metadata.server.ssl.keystore.reload, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, kafka.rest.confluent.metadata.enable.server.urls.refresh, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:33,419 [confluent-license-manager] org.apache.kafka.clients.consumer.ConsumerConfig logUnused - These configurations '[kafka.rest.client.sasl.oauthbearer.token.endpoint.url, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.metadata.server.ssl.keystore.reload, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, kafka.rest.confluent.metadata.enable.server.urls.refresh, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:33,978 [confluent-license-manager] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[kafka.rest.client.sasl.oauthbearer.token.endpoint.url, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, confluent.metadata.server.listeners, config.providers, min.insync.replicas, kafka.rest.client.security.protocol, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.metadata.server.ssl.keystore.reload, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:46:33,996 [confluent-license-manager] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[kafka.rest.client.sasl.oauthbearer.token.endpoint.url, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.client.sasl.mechanism, kafka.rest.oauthbearer.expected.issuer, confluent.metadata.server.listeners, config.providers, min.insync.replicas, kafka.rest.client.security.protocol, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.metadata.server.ssl.keystore.reload, confluent.metrics.reporter.publish.ms, kafka.rest.client.sasl.jaas.config, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, confluent.authorizer.access.rule.providers, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	confluent.metadata.oauthbearer.login.client.id = ssologin
	confluent.metadata.oauthbearer.login.client.secret = [hidden]
	confluent.metadata.oauthbearer.login.connect.timeout.ms = null
	confluent.metadata.oauthbearer.login.oauth.scope = null
	confluent.metadata.oauthbearer.login.read.timeout.ms = null
	confluent.metadata.oauthbearer.login.retry.backoff.max.ms = 10000
	confluent.metadata.oauthbearer.login.retry.backoff.ms = 100
	confluent.metadata.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	confluent.metadata.oauthbearer.login.client.id = ssologin
	confluent.metadata.oauthbearer.login.client.secret = [hidden]
	confluent.metadata.oauthbearer.login.connect.timeout.ms = null
	confluent.metadata.oauthbearer.login.oauth.scope = null
	confluent.metadata.oauthbearer.login.read.timeout.ms = null
	confluent.metadata.oauthbearer.login.retry.backoff.max.ms = 10000
	confluent.metadata.oauthbearer.login.retry.backoff.ms = 100
	confluent.metadata.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
[INFO] 2024-10-08 10:46:38,491 [qtp850268617-214] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin login - Successfully logged in.
[INFO] 2024-10-08 10:46:38,492 [kafka-expiring-relogin-thread-ssologin] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin run - [Principal=:ssologin]: Expiring credential re-login thread started.
[INFO] 2024-10-08 10:46:38,494 [qtp850268617-214] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, metrics.context.resource.cluster.id, metrics.context._namespace, metrics.context.resource.version, confluent.metadata.enable.server.urls.refresh, confluent.metadata.bootstrap.server.urls, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.oauthbearer.login.client.id, confluent.metadata.ssl.truststore.location, confluent.metadata.ssl.truststore.password, bearer.auth.credentials.source, confluent.metadata.http.auth.credentials.provider, confluent.metadata.oauthbearer.token.endpoint.url]' were supplied but are not used yet.
[INFO] 2024-10-08 10:46:38,509 [kafka-expiring-relogin-thread-ssologin] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin refreshMs - [Principal=ssologin]: Expiring credential valid from Tue Oct 08 10:46:38 GMT 2024 to Tue Oct 08 11:46:38 GMT 2024
[INFO] 2024-10-08 10:46:38,510 [kafka-expiring-relogin-thread-ssologin] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin run - [Principal=:ssologin]: Expiring credential re-login sleeping until: Tue Oct 08 11:37:12 GMT 2024
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:47:02,628 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:47:02,653 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:47:32,453 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:47:32,506 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:48:02,273 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:48:02,311 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:48:32,610 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:48:32,638 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:49:02,340 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:49:02,374 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:49:32,168 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:49:32,214 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:50:02,466 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:50:02,513 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:50:32,298 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:50:32,330 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:51:02,486 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:51:02,512 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:51:32,233 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:51:32,316 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:52:02,449 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:52:02,498 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:52:32,221 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:52:32,301 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:53:02,477 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:53:02,507 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:53:32,239 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:53:32,270 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:54:02,503 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:54:02,546 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:54:32,230 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:54:32,259 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:55:02,498 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:55:02,528 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:55:32,292 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:55:32,344 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:56:02,570 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:56:02,598 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:56:32,298 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:56:32,321 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:57:02,551 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:57:02,577 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:57:32,346 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:57:32,381 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:58:02,160 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:58:02,186 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:58:32,377 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:58:32,406 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:59:02,557 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:59:02,583 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:59:32,280 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 10:59:32,311 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:00:02,485 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:00:02,566 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:00:32,153 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:00:32,179 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:01:02,363 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:01:02,401 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:01:32,648 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:01:32,671 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:02:02,438 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:02:02,470 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:02:32,634 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:02:32,672 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:03:02,426 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:03:02,475 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:03:32,638 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:03:32,685 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:04:02,378 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:04:02,413 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:04:32,246 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:04:32,300 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:05:02,449 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:05:02,498 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:05:32,650 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:05:32,678 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:06:02,323 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:06:02,355 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:06:32,501 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:06:32,523 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:07:02,644 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:07:02,674 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:07:32,302 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:07:32,346 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:08:02,476 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:08:02,525 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:08:32,648 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:08:32,744 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:09:02,313 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:09:02,367 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:09:32,520 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:09:32,550 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:10:02,657 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:10:02,688 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:10:32,342 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:10:32,394 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:11:02,544 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:11:02,586 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:11:32,225 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:11:32,246 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:12:02,416 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:12:02,444 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:12:32,599 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:12:32,634 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:13:02,259 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:13:02,281 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:13:32,460 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:13:32,508 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:14:02,645 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:14:02,743 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:14:32,342 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:14:32,378 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:15:02,513 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:15:02,547 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:15:32,212 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:15:32,259 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:16:02,368 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:16:02,392 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:16:32,559 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:16:32,584 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:17:02,197 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:17:02,225 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:17:32,500 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:17:32,547 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:18:02,226 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:18:02,255 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:18:32,620 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:18:32,648 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:19:02,339 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:19:02,383 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:19:32,660 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:19:32,708 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:20:02,373 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:20:02,404 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:20:32,623 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:20:32,665 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:21:02,279 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:21:02,323 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:21:32,589 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:21:32,622 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:22:02,205 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:22:02,236 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:22:32,473 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:22:32,594 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:23:02,237 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:23:02,264 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:23:32,459 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:23:32,493 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:24:02,594 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:24:02,625 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:24:32,313 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:24:32,355 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:25:02,631 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:25:02,662 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:25:32,348 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:25:32,390 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:26:02,594 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:26:02,621 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:26:32,300 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:26:32,324 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:27:02,558 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:27:02,603 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:27:32,271 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:27:32,320 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:28:02,527 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:28:02,625 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:28:32,230 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:28:32,290 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:29:02,448 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:29:02,475 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:29:32,669 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:29:32,707 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:30:02,371 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:30:02,400 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:30:32,673 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:30:32,713 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:31:02,427 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:31:02,454 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:31:32,244 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:31:32,269 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:32:02,557 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:32:02,584 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:32:32,364 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:32:32,394 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:33:02,621 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:33:02,658 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:33:32,378 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:33:32,426 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:34:02,658 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:34:02,686 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:34:32,393 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:34:32,416 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:35:02,673 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:35:02,698 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:35:32,394 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:35:32,493 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:36:02,653 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:36:02,700 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:36:32,413 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:36:32,460 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:37:02,698 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:37:02,752 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
[INFO] 2024-10-08 11:37:12,068 [kafka-expiring-relogin-thread-ssologin] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin reLogin - Initiating re-login for ssologin, logout() still needs to be called on a previous login = true
	confluent.metadata.oauthbearer.login.client.id = ssologin
	confluent.metadata.oauthbearer.login.client.secret = [hidden]
	confluent.metadata.oauthbearer.login.connect.timeout.ms = null
	confluent.metadata.oauthbearer.login.oauth.scope = null
	confluent.metadata.oauthbearer.login.read.timeout.ms = null
	confluent.metadata.oauthbearer.login.retry.backoff.max.ms = 10000
	confluent.metadata.oauthbearer.login.retry.backoff.ms = 100
	confluent.metadata.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
[INFO] 2024-10-08 11:37:12,119 [kafka-expiring-relogin-thread-ssologin] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin refreshMs - [Principal=ssologin]: Expiring credential valid from Tue Oct 08 11:37:12 GMT 2024 to Tue Oct 08 12:37:12 GMT 2024
[INFO] 2024-10-08 11:37:12,119 [kafka-expiring-relogin-thread-ssologin] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin run - [Principal=:ssologin]: Expiring credential re-login sleeping until: Tue Oct 08 12:26:54 GMT 2024
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:37:32,468 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:37:32,520 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:38:02,201 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:38:02,231 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:38:32,419 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:38:32,452 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:39:02,247 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:39:02,280 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:39:32,538 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:39:32,570 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:40:02,267 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:40:02,295 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:40:32,554 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:40:32,583 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:41:02,309 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:41:02,337 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:41:32,654 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:41:32,687 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:42:02,312 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:42:02,422 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:42:32,607 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:42:32,633 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:43:02,300 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:43:02,330 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:43:32,622 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:43:32,664 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:44:02,361 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:44:02,391 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:44:32,675 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:44:32,707 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:45:02,416 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:45:02,447 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:45:32,213 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:45:32,240 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:46:02,420 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:46:02,453 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
[INFO] 2024-10-08 11:46:11,592 [pool-6-thread-1] org.apache.kafka.common.security.oauthbearer.internals.secured.RefreshingHttpsJwks refresh - OAuth JWKS refresh of http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs starting
[INFO] 2024-10-08 11:46:11,627 [pool-6-thread-1] org.apache.kafka.common.security.oauthbearer.internals.secured.RefreshingHttpsJwks refresh - OAuth JWKS refresh of http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs complete
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:46:32,665 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:46:32,700 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:47:02,418 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:47:02,458 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:47:32,374 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:47:32,406 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:48:02,590 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:48:02,616 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:48:32,414 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:48:32,468 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:49:02,645 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:49:02,672 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:49:32,435 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:49:32,468 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:50:02,695 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:50:02,728 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:50:32,410 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:50:32,445 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:51:02,654 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:51:02,699 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:51:32,405 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:51:32,541 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:52:02,683 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:52:02,716 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:52:32,425 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:52:32,464 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:53:02,185 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:53:02,211 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:53:32,587 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:53:32,633 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:54:02,397 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:54:02,430 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:54:32,460 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:54:32,517 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:55:02,637 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:55:02,668 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:55:32,297 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:55:32,349 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:56:02,600 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:56:02,663 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:56:32,380 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:56:32,414 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:57:02,571 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:57:02,615 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:57:32,296 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:57:32,330 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:58:02,598 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:58:02,643 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:58:32,222 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:58:32,251 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:59:02,401 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:59:02,538 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:59:32,618 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 11:59:32,651 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:00:02,472 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:00:02,520 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:00:32,675 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:00:32,722 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:01:02,373 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:01:02,404 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:01:32,578 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:01:32,611 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:02:02,205 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:02:02,234 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:02:32,416 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:02:32,463 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:03:02,573 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:03:02,603 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:03:32,243 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:03:32,274 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:04:02,443 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:04:02,471 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:04:32,648 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:04:32,697 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:05:02,308 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:05:02,357 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:05:32,552 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:05:32,663 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:06:02,245 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:06:02,286 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:06:32,472 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:06:32,511 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:07:02,660 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:07:02,708 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:07:32,333 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:07:32,361 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:08:02,531 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:08:02,573 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:08:32,226 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:08:32,255 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:09:02,491 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:09:02,521 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:09:32,676 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:09:32,718 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:10:02,282 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:10:02,311 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:10:32,450 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:10:32,494 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:11:02,660 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:11:02,693 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:11:32,319 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:11:32,356 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:12:02,542 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:12:02,572 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:12:32,236 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:12:32,274 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:13:02,468 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:13:02,572 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:13:32,694 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:13:32,751 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:14:02,413 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:14:02,476 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:14:32,625 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:14:32,656 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:15:02,248 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:15:02,288 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:15:32,473 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:15:32,502 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:16:02,648 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:16:02,675 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:16:32,359 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:16:32,400 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:17:02,499 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:17:02,549 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:17:32,264 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:17:32,307 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:18:02,452 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:18:02,509 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:18:32,629 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:18:32,659 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:19:02,389 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:19:02,484 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:19:32,621 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:19:32,782 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:20:02,313 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:20:02,348 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:20:32,560 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:20:32,593 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:21:02,248 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:21:02,291 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:21:32,437 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:21:32,470 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:22:02,648 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:22:02,679 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:22:32,356 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:22:32,391 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:23:02,618 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:23:02,660 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:23:32,293 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:23:32,344 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:24:02,477 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:24:02,511 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:24:32,163 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:24:32,198 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:25:02,385 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:25:02,411 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:25:32,572 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:25:32,641 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:26:02,260 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:26:02,364 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:26:32,520 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:26:32,553 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
[INFO] 2024-10-08 12:26:54,359 [kafka-expiring-relogin-thread-ssologin] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin reLogin - Initiating re-login for ssologin, logout() still needs to be called on a previous login = true
	confluent.metadata.oauthbearer.login.client.id = ssologin
	confluent.metadata.oauthbearer.login.client.secret = [hidden]
	confluent.metadata.oauthbearer.login.connect.timeout.ms = null
	confluent.metadata.oauthbearer.login.oauth.scope = null
	confluent.metadata.oauthbearer.login.read.timeout.ms = null
	confluent.metadata.oauthbearer.login.retry.backoff.max.ms = 10000
	confluent.metadata.oauthbearer.login.retry.backoff.ms = 100
	confluent.metadata.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
[INFO] 2024-10-08 12:26:54,389 [kafka-expiring-relogin-thread-ssologin] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin refreshMs - [Principal=ssologin]: Expiring credential valid from Tue Oct 08 12:26:54 GMT 2024 to Tue Oct 08 13:26:54 GMT 2024
[INFO] 2024-10-08 12:26:54,389 [kafka-expiring-relogin-thread-ssologin] org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin run - [Principal=:ssologin]: Expiring credential re-login sleeping until: Tue Oct 08 13:16:03 GMT 2024
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:27:02,158 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:27:02,230 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:27:32,341 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:27:32,366 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:28:02,510 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:28:02,539 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:28:32,181 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:28:32,239 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:29:02,394 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:29:02,425 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:29:32,655 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:29:32,686 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:30:02,298 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:30:02,330 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:30:32,599 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:30:32,627 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:31:02,319 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:31:02,361 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:31:32,510 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:31:32,536 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:32:02,216 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:32:02,259 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:32:32,468 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:32:32,522 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:33:02,608 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:33:02,638 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:33:32,380 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:33:32,413 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:34:02,464 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:34:02,494 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:34:32,197 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:34:32,329 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:35:02,407 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:35:02,458 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:35:32,589 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:35:32,649 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:36:02,252 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:36:02,308 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:36:32,478 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:36:32,508 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:37:02,641 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:37:02,672 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:37:32,294 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:37:32,328 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:38:02,442 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:38:02,487 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:38:32,610 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:38:32,645 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:39:02,289 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:39:02,340 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:39:32,497 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:39:32,552 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:40:02,136 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:40:02,169 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:40:32,304 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:40:32,361 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:41:02,459 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:41:02,575 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:41:32,630 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:41:32,679 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:42:02,315 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:42:02,346 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:42:32,492 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:42:32,524 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:43:02,155 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:43:02,187 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:43:32,354 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:43:32,407 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:44:02,569 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:44:02,596 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:44:32,250 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:44:32,280 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:45:02,484 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:45:02,512 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:45:32,176 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:45:32,199 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:46:02,361 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:46:02,385 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
[INFO] 2024-10-08 12:46:11,527 [pool-6-thread-1] org.apache.kafka.common.security.oauthbearer.internals.secured.RefreshingHttpsJwks refresh - OAuth JWKS refresh of http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs starting
[INFO] 2024-10-08 12:46:11,553 [pool-6-thread-1] org.apache.kafka.common.security.oauthbearer.internals.secured.RefreshingHttpsJwks refresh - OAuth JWKS refresh of http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs complete
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:46:32,583 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:46:32,615 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:47:02,269 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:47:02,304 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:47:32,470 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:47:32,519 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:48:02,126 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:48:02,158 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:48:32,350 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:48:32,380 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:49:02,546 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:49:02,597 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:49:32,234 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:49:32,363 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:50:02,410 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:50:02,456 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:50:32,574 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:50:32,604 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:51:02,246 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:51:02,287 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:51:32,475 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:51:32,504 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:52:02,134 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:52:02,186 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:52:32,331 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:52:32,359 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	client.sasl.mechanism = OAUTHBEARER
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:53:02,518 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:53:02,545 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:53:32,210 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
[INFO] 2024-10-08 12:53:32,244 [LicenseBackgroundFetcher RUNNING] org.apache.kafka.clients.admin.AdminClientConfig logUnused - These configurations '[sasl.oauthbearer.token.endpoint.url, kafka.rest.client.sasl.oauthbearer.token.endpoint.url, metrics.context.resource.version, confluent.metadata.server.oauthbearer.jwks.endpoint.url, confluent.metadata.enable.server.urls.refresh, kafka.rest.oauthbearer.expected.issuer, kafka.rest.client.sasl.mechanism, metrics.context.resource.commit.id, metrics.context.resource.type, confluent.metadata.server.listeners, config.providers, kafka.rest.client.security.protocol, admin.replication.factor, confluent.metrics.reporter.security.protocol, kafka.rest.oauthbearer.jwks.endpoint.url, confluent.metadata.server.oauthbearer.expected.issuer, kafka.rest.confluent.metadata.bootstrap.server.urls, super.users, kafka.rest.enable, confluent.metadata.server.user.store, confluent.topic.replication.factor, config.providers.file.class, confluent.metadata.server.token.key.path, confluent.metadata.server.ssl.truststore.location, kafka.rest.client.ssl.truststore.password, metrics.context.resource.cluster.id, kafka.rest.public.key.path, confluent.metrics.reporter.bootstrap.servers, confluent.metadata.server.ssl.endpoint.identification.algorithm, kafka.rest.oauthbearer.sub.claim.name, confluent.metadata.topic.replication.factor, kafka.rest.rest.servlet.initializor.classes, confluent.metrics.reporter.ssl.truststore.location, confluent.license.topic.replication.factor, confluent.metadata.server.ssl.keystore.reload, kafka.rest.client.sasl.jaas.config, confluent.metrics.reporter.publish.ms, kafka.rest.client.ssl.truststore.location, kafka.rest.confluent.metadata.oauthbearer.login.client.id, replication.factor, kafka.rest.confluent.metadata.enable.server.urls.refresh, metrics.context._namespace, kafka.rest.bootstrap.servers, confluent.metadata.server.advertised.listeners, confluent.metrics.reporter.topic.replicas, confluent.metadata.server.authentication.method, confluent.metrics.reporter.ssl.truststore.password, confluent.metadata.server.oauthbearer.sub.claim.name, confluent.metadata.server.token.auth.enable, confluent.metadata.server.token.max.lifetime.ms, kafka.rest.confluent.metadata.ssl.truststore.password, kafka.rest.kafka.rest.resource.extension.class, confluent.metadata.server.ssl.keystore.location, confluent.metrics.reporter.sasl.mechanism, kafka.rest.confluent.metadata.oauthbearer.token.endpoint.url, confluent.metadata.server.ssl.key.password, sasl.enabled.mechanisms, confluent.metadata.server.token.signature.algorithm, confluent.metadata.server.ssl.keystore.password, kafka.rest.confluent.metadata.http.auth.credentials.provider, confluent.security.event.logger.exporter.kafka.topic.replicas, kafka.rest.confluent.metadata.ssl.truststore.location, confluent.authorizer.access.rule.providers, confluent.metadata.server.ssl.truststore.password, confluent.metrics.reporter.sasl.jaas.config, kafka.rest.confluent.metadata.oauthbearer.login.client.secret, confluent.metadata.server.public.key.path]' were supplied but are not used yet.
