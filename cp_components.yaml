apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: operator
spec:
  podTemplate:
    resources:
      requests:
        memory: 2Gi
        cpu: 1
  dataVolumeCapacity: 10G
  podTemplate:
    resources:
      requests:
        memory: 2Gi
        cpu: 1
  image:
    application: confluentinc/cp-server:7.7.0
    init: confluentinc/confluent-init-container:2.9.0
  listeners:
    controller:
      tls:
        enabled: true
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
  authorization:
    type: rbac
    superUsers:
    - User:operator # required: default user corresponding to replication listener in kafka, ow will get topic authorization error
    - User:kafka
    - User:ssologin
  dependencies:
    mdsKafkaCluster:
      bootstrapEndpoint: kafka.operator.svc.cluster.local:9073
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
  tls:
    autoGeneratedCerts: true
  replicas: 1
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: operator
spec:
  podTemplate:
    resources:
      requests:
        memory: 2Gi
        cpu: 1
  configOverrides:
    server:
    - auto.create.topics.enable=true
    - offsets.topic.replication.factor=1
    - default.replication.factor=1
    - confluent.license.topic.replication.factor=1
    - confluent.tier.metadata.replication.factor=1
    - confluent.balancer.topic.replication.factor=1
    - confluent.security.event.logger.exporter.kafka.topic.replicas=1
    - transaction.state.log.min.isr=1
    - transaction.state.log.replication.factor=1
    - confluent.metadata.topic.replication.factor=1
    - confluent.topic.replication.factor=1
<<<<<<< HEAD
    - confluent.cluster.link.metadata.topic.replication.factor=1
=======
>>>>>>> origin/main
    log4j:
    - log4j.logger.io.confluent.rest-utils=DEBUG, stdout
    - log4j.additivity.io.confluent.rest-utils=false
    - log4j.logger.io.confluent.rbacapi=DEBUG, stdout
    - log4j.additivity.io.confluent.rbacapi=false
    - log4j.logger.io.confluent.tokenapi=DEBUG, stdout
    - log4j.additivity.io.confluent.tokenapi=false
    - log4j.logger.io.confluent.security.auth=DEBUG, stdout
    - log4j.additivity.io.confluent.security.auth=false
    - log4j.logger.io.confluent.security.store=DEBUG, stdout
    - log4j.additivity.io.confluent.security.store=false
    - log4j.logger.io.confluent.common.security.jetty=DEBUG, stdout
    - log4j.additivity.io.confluent.common.security.jetty=false
    - log4j.logger.io.confluent.security.auth.provider.ldap=TRACE, stdout

  replicas: 1
  image:
    application: confluentinc/cp-server:7.7.1
    init: confluentinc/confluent-init-container:2.9.0
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
  authorization:
    type: rbac
    superUsers:
    - User:ssologin
  services:
    mds:
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
      provider:
        oauth:
          configurations:
            expectedIssuer: http://keycloak:8080/realms/sso_test
            jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
            subClaimName: client_id
  dependencies:
    kRaftController:
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: oauth
          jaasConfig:
            secretRef: oauth-jass
          oauthSettings:
            tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      clusterRef:
        name: kraftcontroller
    kafkaRest:
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: operator
spec:
  kafkaRest:
    authentication:
      type: oauth
      oauth:
        secretRef: oauth-jass
        configuration:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: operator
spec:
  replicas: 1
  image:
    application: confluentinc/cp-kafka-rest:7.7.1
    init: confluentinc/confluent-init-container:2.9.0
  tls:
    autoGeneratedCerts: true
  authorization:
    type: rbac
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.operator.svc.cluster.local:9071
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.operator.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: oauth
        oauth:
          secretRef: oauth-jass
          configuration:
            tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
            expectedIssuer: http://keycloak:8080/realms/sso_test
            jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
            subClaimName: client_id
            scope: openid
      tls:
        enabled: true
---
